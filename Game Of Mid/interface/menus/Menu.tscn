[gd_scene load_steps=4 format=3 uid="uid://crmxpy1lmbx0s"]

[ext_resource type="Theme" path="res://interface/default.theme" id="1"]
[ext_resource type="PackedScene" uid="uid://y73fpl3wyn54" path="res://interface/menus/MenuSfx.tscn" id="3"]

[sub_resource type="GDScript" id="GDScript_sompu"]
script/source = "#extends Control
#
#signal open()
#signal closed()
#
#@export var SUB_MENU_PATH: NodePath
#
#@onready var sound_confirm = $MenuSfx/Confirm
#@onready var sound_navigate = $MenuSfx/Navigate
#@onready var sound_open = $MenuSfx/Open
#
#func _ready():
	#set_process_input(false)
#
#func _open(args=[]):
	#emit_signal(\"open\")
	#set_process_input(true)
	#show()
	#sound_open.play()
#
#func close():
	#emit_signal(\"closed\")
	#set_process_input(false)
	#hide()
	#sound_confirm.play()
#
#func _input(event):
	#if event.is_action_pressed(\"ui_cancel\"):
		#get_viewport().set_input_as_handled()
		#close()
#
## You can streamline opening sub menus with these methods
## The main drawback is you lose the initialize method's signature
## Instead you have to group the arguments in an array
#func initialize(args=[]):
	#return
#
#func open_sub_menu(menu, args=[]):
	#var sub_menu = menu.instantiate() if menu is PackedScene else menu
	#if SUB_MENU_PATH:
		#get_node(SUB_MENU_PATH).add_child(sub_menu)
	#else:
		#add_child(sub_menu)
	#sub_menu.initialize(args)
#
	#set_process_input(false)
	#sub_menu.open(args)
	#await sub_menu.closed
	#set_process_input(true)
	#remove_child(sub_menu)
"

[node name="Menu" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme = ExtResource("1")
script = SubResource("GDScript_sompu")

[node name="MenuSfx" parent="." instance=ExtResource("3")]
